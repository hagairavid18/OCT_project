image : 0
torch.Size([1, 3, 496, 512])
1
torch.Size([1, 3, 496, 512])
torch.Size([1, 512])
Traceback (most recent call last):
  File "run_layer_cam.py", line 103, in <module>
    cam = layer_cam.generate_cam(images.to('cuda'), labels.item())
  File "/home/labs/testing/class57/OCTransformer/breakdown/testings/vit_att_trial/layer_cam.py", line 84, in generate_cam
    model_output.backward(gradient=one_hot_output, retain_graph=True)
  File "/home/labs/testing/class57/.local/lib/python3.8/site-packages/torch/_tensor.py", line 307, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/labs/testing/class57/.local/lib/python3.8/site-packages/torch/autograd/__init__.py", line 154, in backward
    Variable._execution_engine.run_backward(
RuntimeError: invalid gradient at index 0 - expected type TensorOptions(dtype=float, device=cuda:0, layout=Strided, requires_grad=false (default), pinned_memory=false (default), memory_format=(nullopt)) but got TensorOptions(dtype=float, device=cpu, layout=Strided, requires_grad=false (default), pinned_memory=false (default), memory_format=(nullopt))